BackdropNode {
 inputs 0
 name Backdrop_Adjust
 tile_color 0x666666ff
 label "<center><font color=\[value note_color]>\[value note]\n\n\n"
 note_font "Bitstream Vera Sans Bold"
 note_font_size 42
 selected true
 xpos 3150
 ypos -982
 bdwidth 500
 bdheight 500
 addUserKnob {20 User}
 addUserKnob {22 cover l "<font color=yellow>Cover Selected Area" T "node_xpos = \[]\nnode_ypos = \[]\nif nuke.selectedNodes():\n    for s in nuke.selectedNodes():\n        node_xpos.append(s\['xpos'].value())\n        node_ypos.append(s\['ypos'].value())\n    \n    x_max = max(node_xpos)\n    x_min = min(node_xpos)\n    \n    x_width = (float(x_max) - float(x_min))\n    print (x_width)\n    \n    y_max = max(node_ypos)\n    y_min = min(node_ypos)\n    \n    y_height = (float(y_max) - float(y_min))\n    print (y_height)\n    \n    bd = nuke.thisNode()\n    bd.setXpos(int(x_min) - 100)\n    bd\['bdwidth'].setValue(x_width+300)\n    bd.setYpos(int(y_min) - 200)\n    bd\['bdheight'].setValue(y_height+300)\nelse:\n    nuke.message('<font color=orange><b>Select nodes first!')" +STARTLINE}
 addUserKnob {26 label_1 l <b>Label}
 addUserKnob {1 note l Note}
 note -
 addUserKnob {4 note_color l "Note Color" M {Orange White Silver Gray Black Red Maroon Yellow Olive Lime Green Aqua Teal Blue Navy Fuchsia Purple}}
 addUserKnob {26 font_size l "Note size"}
 addUserKnob {22 size_plus_10 l "<font color=orange>▲ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size+10)\n\nnew_size =  int(curr_size + 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
 addUserKnob {22 size_min_10 l "<font color=aqua>▼ 10" -STARTLINE T "curr_size = nuke.thisNode()\['note_font_size'].value()\n\nnuke.thisNode()\['note_font_size'].setValue(curr_size-10)\n\nnew_size =  int(curr_size - 10)\n\nprint ('\\n The new font size is ' + str(new_size))"}
 addUserKnob {26 resize l "<b>Re Size"}
 addUserKnob {26 y l Height}
 addUserKnob {22 add_y_100 l "<font color=orange>Add Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+100)\n\nnew_height =  int(curr_height + 100)\n\nprint ('\\n The new height is ' + str(new_height))\n" +STARTLINE}
 addUserKnob {22 add_y_500 l "<font color=orange>Add Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height+500)\n\nnew_height = int(curr_height + 500)\n\nprint ('\\n The new height is ' + str(new_height))\n"}
 addUserKnob {22 take_y_100 l "<font color=aqua>Take Y 100" T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-100)\n\nnew_height = int(curr_height - 100)\n\nprint ('\\n The new height is ' + str(new_height))\n" +STARTLINE}
 addUserKnob {22 take_y_500 l "<font color=aqua>Take Y 500" -STARTLINE T "curr_height = nuke.thisNode()\['bdheight'].value()\n\nnuke.thisNode()\['bdheight'].setValue(curr_height-500)\n\nnew_height = int(curr_height - 500)\n\nprint ('\\n The new height is ' + str(new_height))"}
 addUserKnob {26 x l Width}
 addUserKnob {22 add_x_100 l "<font color=orange>Add X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+100)\n\nnew_width =  int(curr_width + 100)\n\nprint ('\\n The new width is ' + str(new_width))\n\n" +STARTLINE}
 addUserKnob {22 add_x_500 l "<font color=orange>Add X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width+500)\n\nnew_width =  int(curr_width + 500)\n\nprint ('\\n The new width is ' + str(new_width))"}
 addUserKnob {22 take_x_100 l "<font color=aqua>Take X 100" T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-100)\n\nnew_width =  int(curr_width - 100)\n\nprint ('\\n The new width is ' + str(new_width))" +STARTLINE}
 addUserKnob {22 take_x_500 l "<font color=aqua>Take X 500" -STARTLINE T "curr_width = nuke.thisNode()\['bdwidth'].value()\n\nnuke.thisNode()\['bdwidth'].setValue(curr_width-500)\n\nnew_width =  int(curr_width - 500)\n\nprint ('\\n The new width is ' + str(new_width))"}
 addUserKnob {26 node_color l "<b>Node Color"}
 addUserKnob {22 red l "<font color=#D2654D>█" T "nuke.thisNode()\['tile_color'].setValue(2134851583)" +STARTLINE}
 addUserKnob {22 pink l "<font color=#D265AD>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2134861567)"}
 addUserKnob {22 purple l "<font color=#B473A3>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1916764159)"}
 addUserKnob {22 blue l "<font color=#8291D3>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1062830079)"}
 addUserKnob {22 cyan l "<font color=#4DB9D3>█" T "nuke.thisNode()\['tile_color'].setValue(1065320447)" +STARTLINE}
 addUserKnob {22 green l "<font color=#4DB97E>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1065310719)"}
 addUserKnob {22 olive l "<font color=#628067>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1920942079)"}
 addUserKnob {22 brown l "<font color=#9B6840>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2137407487)"}
 addUserKnob {22 grey_1 l "<font color=#DDDDDD>█" T "nuke.thisNode()\['tile_color'].setValue(3149642751)" +STARTLINE}
 addUserKnob {22 grey_2 l "<font color=#AAAAAA>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(2576980479)"}
 addUserKnob {22 grey_3 l "<font color=#777777>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1717987071)"}
 addUserKnob {22 grey_4 l "<font color=#333333>█" -STARTLINE T "nuke.thisNode()\['tile_color'].setValue(1145324799)"}
 addUserKnob {26 ""}
 addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.01 version</font>"}
 addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">Backdrop_Adjust by Attila Gasparetz</font>"}
}
